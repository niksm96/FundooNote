package com.bridgelabz.utility;

import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import com.bridgelabz.model.User;


public class UserValidation implements Validator{
	
	private static final String REGEX_NAME = "^[a-zA-Z]{3,20}$";
	private static final String REGEX_EMAIL = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,6}$";
	private static final String REGEX_PASSWORD = "^[a-zA-Z0-9]{4,8}$";
	private static final String REGEX_MOBILE_NUMBER = "[1-9]\\d{9}";
	
	public boolean supports(Class<?> clazz) {
		return User.class.equals(clazz);
	}

	public void validate(Object target, Errors errors) {
		User user = (User) target;
		if(!user.getName().matches(REGEX_NAME)){
			errors.rejectValue("name", "symbolsPresent",new Object[]{"'name'"},"name can't be symbols");
		}
		if(!user.getEmailId().matches(REGEX_EMAIL)) {
			errors.rejectValue("emailId", "symbolsPresent",new Object[]{"'emailId'"},"emailId can't be symbols");
		}
		if(!user.getPassword().matches(REGEX_PASSWORD)) {
			errors.rejectValue("password", "symbolsPresent",new Object[]{"'password'"},"password can't be symbols");
		}
		if(!String.valueOf(user.getMobileNumber()).matches(REGEX_MOBILE_NUMBER)) {
			errors.rejectValue("mobileNumber", "symbolsPresent",new Object[]{"'mobileNumber'"},"mobileNumber can't be symbols");
		}
	}
}
