package com.bridgelabz.utility;

import java.util.Date;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class EmailTest {
	public static void main(String[] args) {

		final String fromEmail = ".com"; //requires valid gmail id
		final String password = "#ops185$"; // correct password for gmail id
		final String toEmail = "anmolvid135@gmail.com"; // can be any email id 
		
//		System.out.println("SSLEmail Start");
//		Properties props = new Properties();
//		props.put("mail.smtp.host", "smtp.gmail.com"); //SMTP Host
//		props.put("mail.smtp.socketFactory.port", "587"); //SSL Port
//		props.put("mail.smtp.socketFactory.class",
//				"javax.net.ssl.SSLSocketFactory"); //SSL Factory Class
//		props.put("mail.smtp.auth", "true"); //Enabling SMTP Authentication
//		props.put("mail.smtp.port", "465"); //SMTP Port
//		
//		Authenticator auth = new Authenticator() {
//			//override the getPasswordAuthentication method
//			protected PasswordAuthentication getPasswordAuthentication() {
//				return new PasswordAuthentication(fromEmail, password);
//			}
//		};
//		
//		Session session = Session.getDefaultInstance(props, auth);
//		System.out.println("Session created");
//	    sendEmail(session, toEmail,"SSLEmail Testing Subject", "SSLEmail Testing Body");

		System.out.println("TLSEmail Start");
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		
                //create Authenticator object to pass in Session.getInstance argument
		Session session = Session.getInstance(props,
				  new javax.mail.Authenticator() {
					protected PasswordAuthentication getPasswordAuthentication() {
						return new PasswordAuthentication(fromEmail, password);
					}
				  });
		//Session session = Session.getInstance(props, auth);
		
		sendEmail(session, toEmail,"TLSEmail Testing Subject", "TLSEmail Testing Body");
	       
	}

	public static void sendEmail(Session session, String toEmail, String subject, String body) {
		try {
			MimeMessage msg = new MimeMessage(session);
			// set message headers
			msg.addHeader("Content-type", "text/HTML; charset=UTF-8");
			msg.addHeader("format", "flowed");
			msg.addHeader("Content-Transfer-Encoding", "8bit");

			msg.setFrom(new InternetAddress("shweta.bodke@bridgelabz.com", "NoReply-JD"));

			msg.setReplyTo(InternetAddress.parse("shweta.bodke@bridgelabz.com", false));

			msg.setSubject(subject, "UTF-8");

			msg.setText(body, "UTF-8");

			msg.setSentDate(new Date());

			msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail, false));
			System.out.println("Message is ready");
			Transport.send(msg);

			System.out.println("EMail Sent Successfully!!");
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}
